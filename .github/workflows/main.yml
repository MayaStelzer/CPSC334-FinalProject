name: CI Pipeline

on: [push, pull_request]

jobs:
  build:
    name: Build
    runs-on: self-hosted
    timeout-minutes: 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake g++ libgtest-dev libpthread-stubs0-dev

      - name: Build GTest
        run: |
          cd /usr/src/gtest
          sudo cmake .
          sudo make
          sudo cp lib/*.a /usr/lib

      - name: Configure CMake
        run: cmake -S . -B build

      - name: Build project
        run: cmake --build build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: build/

  test:
    name: Test
    runs-on: self-hosted
    needs: build
    timeout-minutes: 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: build

      - name: Make runTests executable
        run: chmod +x ./build/test/runTests

      - name: Run unit tests
        run: ./build/test/runTests

  lint:
    name: Lint
    runs-on: self-hosted
    needs: build
    timeout-minutes: 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Clang-Tidy
        run: sudo apt-get install -y clang-tidy

      - name: Run Clang-Tidy and ignore errors
        run: |
          clang-tidy -p . PA4.cpp Main.cpp || true

deploy:
  name: Deploy to Remote VM
  runs-on: self-hosted
  needs: [test, lint]
  timeout-minutes: 10

  steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Build Docker image
      run: docker build -t pa4-app .

    - name: Save Docker image as tarball
      run: |
        mkdir -p artifacts
        docker save pa4-app > artifacts/pa4-app.tar

    - name: Set up SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.REMOTE_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

    - name: Copy image to remote VM
      run: |
        scp -i ~/.ssh/id_rsa artifacts/pa4-app.tar ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:/tmp/pa4-app.tar

    - name: Run container on remote VM
      run: |
        ssh -i ~/.ssh/id_rsa ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} << 'EOF'
          docker load < /tmp/pa4-app.tar
          docker stop pa4-app || true
          docker rm pa4-app || true
          docker run -d --name pa4-app pa4-app
        EOF
